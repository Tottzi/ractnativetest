{"version":3,"sources":["src/components/MovieElement/MovieElement.tsx","src/components/MovieList/MovieList.web.tsx","App.tsx"],"names":["styles","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","color","title","fontSize","fontWeight","separator","marginVertical","height","width","logo","MovieElement","props","movie","View","style","Text","Title","Image","source","uri","Poster","button","input","borderColor","borderStyle","borderWidth","marginTop","textAlign","MovieList","useState","text","setText","setMovie","movies","setMovies","setInfo","fetchData","length","response","axios","get","console","log","data","Search","error","msg","useEffect","map","imdbID","TextInput","onChangeText","value","placeholder","Button","onPress","App","Platform","OS","StatusBar","maxHeight"],"mappings":"uPAcMA,EAASC,UAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,QACjBC,MAAO,SAETC,MAAO,CACLC,SAAU,GACVC,WAAY,OACZH,MAAO,SAETI,UAAW,CACTC,eAAgB,GAChBC,OAAQ,EACRC,MAAO,OAETC,KAAM,CACJD,MAAO,IACPD,OAAQ,OAIGG,EAnCM,SAACC,GACpB,IAAOC,EAASD,EAATC,MACP,OACE,eAACC,EAAA,QAAD,CAAMC,MAAOrB,EAAOG,UAApB,UACE,cAACmB,EAAA,QAAD,CAAMD,MAAOrB,EAAOS,MAApB,SAA4BU,EAAMI,QAClC,cAACC,EAAA,QAAD,CAAOC,OAAQ,CAAEC,IAAKP,EAAMQ,QAAUN,MAAOrB,EAAOgB,W,iBCgDpDhB,EAASC,UAAWC,OAAO,CAC/B0B,OAAQ,GACRZ,KAAM,CACJD,MAAO,IACPD,OAAQ,KAEVe,MAAO,CACLC,YAAa,YACbC,YAAa,QACbC,YAAa,EACbC,UAAW,IAEbxB,MAAO,CACLyB,UAAW,SACXD,UAAW,MAIAE,EArEG,WAChB,MAA4BC,mBAAS,IAArC,WACA,GADA,UACwBA,mBAAS,KAAjC,WAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAc,MAAxC,WAAcG,GAAd,WACA,EAA4BH,mBAAc,MAA1C,WAAOI,EAAP,KAAeC,EAAf,KACA,EAAwBL,mBAAS,IAAjC,WAAaM,GAAb,WAKMC,EAAS,sBAAG,UAAON,GACvB,GAAIA,EAAKO,OAAS,EAChB,OAAOF,EAAQ,wBAEjBA,EAAQ,IACRH,EAAS,IACT,IAAMb,EAAG,6DAAgEW,EACzE,IACE,IAAMQ,QAAiBC,IAAMC,IAAIrB,GACjCsB,QAAQC,IAAIJ,EAASK,KAAKC,QAC1BZ,EAASM,EAASK,KAAKC,OAAO,IAC9BV,EAAUI,EAASK,KAAKC,QACxB,MAAOC,GACPd,EAAQc,EAAMC,SAbH,sDAmBf,OAFAC,qBAAU,cAAU,CAACd,IAEdA,EACL,eAACpB,EAAA,QAAD,WACE,cAACE,EAAA,QAAD,oCACA,8BACCkB,EAAOe,KAAI,SAACpC,GAAD,OACV,cAACC,EAAA,QAAD,UACE,cAAC,EAAD,CAAiCD,MAAOA,GAArBA,EAAMqC,eAI7B,cAACC,EAAA,QAAD,CAAWpC,MAAOrB,EAAO6B,MAAO6B,aAAc,SAACrB,GAAD,OAAUC,EAAQD,IAAOsB,MAAOtB,EAAMuB,YAAY,aAChG,cAACC,EAAA,QAAD,CAAQpD,MAAM,QAAQqD,QAAS,kBAAMnB,EAAUN,SAGjD,eAACjB,EAAA,QAAD,WACE,cAACE,EAAA,QAAD,oCACA,cAACmC,EAAA,QAAD,CAAWpC,MAAOrB,EAAO6B,MAAO6B,aAAc,SAACrB,GAAD,OAAUC,EAAQD,IAAOsB,MAAOtB,EAAMuB,YAAY,aAChG,cAACC,EAAA,QAAD,CAAQpD,MAAM,QAAQqD,QAAS,kBAAMnB,EAAUN,UC7CtC,SAAS0B,IACtB,OAAOC,UAASC,GAEd,eAAC7C,EAAA,QAAD,CAAMC,MAAOrB,EAAOG,UAApB,UACE,cAAC,EAAD,IACA,cAAC+D,EAAA,UAAD,CAAW7C,MAAM,YAWvB,IAAMrB,EAASC,UAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,QACjBC,MAAO,QACP0B,UAAW,SACXD,UAAW,IACXkC,UAAW,Q","file":"static/js/app.331dfb06.chunk.js","sourcesContent":["import { View, Text, Image, StyleSheet } from 'react-native'\r\nimport React from 'react'\r\n\r\nconst MovieElement = (props: any) => {\r\n  const {movie} = props;\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{movie.Title}</Text>\r\n      <Image source={{ uri: movie.Poster }} style={styles.logo} />\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 150,\r\n  },\r\n});\r\n\r\nexport default MovieElement;","import { StyleSheet, View, Text, Button, TextInput, Image, ScrollView, Platform } from 'react-native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MovieElement from '../MovieElement/MovieElement';\r\nimport axios from 'axios';\r\n\r\nconst MovieList = () => {\r\n  const [cookie, setCookie] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [movie, setMovie] = useState<any>(null);\r\n  const [movies, setMovies] = useState<any>(null);\r\n  const [info, setInfo] = useState('');\r\n\r\n  const addText = () => setText(cookie);\r\n  const studentDetails = ['Alex', 'Anik', 'Deven', 'Rathore'];\r\n\r\n  const fetchData = async (text: any) => {\r\n    if (text.length < 3) {\r\n      return setInfo('Minimum 3 characters');\r\n    }\r\n    setInfo('');\r\n    setMovie('');\r\n    const uri = `https://hackday-mymovies-backend.herokuapp.com/api/movies/${text}`;\r\n    try {\r\n      const response = await axios.get(uri);\r\n      console.log(response.data.Search);\r\n      setMovie(response.data.Search[0]);\r\n      setMovies(response.data.Search);\r\n    } catch (error: any) {\r\n      setText(error.msg);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [movies]);\r\n\r\n  return movies ? (\r\n    <View>\r\n      <Text>MovieList Web version</Text>\r\n      <div>\r\n      {movies.map((movie: any) => (\r\n        <View>\r\n          <MovieElement key={movie.imdbID} movie={movie} />\r\n        </View>\r\n      ))}\r\n      </div>\r\n      <TextInput style={styles.input} onChangeText={(text) => setText(text)} value={text} placeholder='Title...' />\r\n      <Button title='Fetch' onPress={() => fetchData(text)} />\r\n    </View>\r\n  ) : (\r\n    <View>\r\n      <Text>MovieList Web version</Text>\r\n      <TextInput style={styles.input} onChangeText={(text) => setText(text)} value={text} placeholder='Title...' />\r\n      <Button title='Fetch' onPress={() => fetchData(text)} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {},\r\n  logo: {\r\n    width: 100,\r\n    height: 150,\r\n  },\r\n  input: {\r\n    borderColor: 'lightgrey',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    marginTop: 20,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    marginTop: 25,\r\n  },\r\n});\r\n\r\nexport default MovieList;\r\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport MovieList from './src/components/MovieList/MovieList';\nimport MovieListWeb from './src/components/MovieList/MovieList.web';\n\n\nexport default function App() {\n  return Platform.OS === 'web' ?\n  (\n    <View style={styles.container}>\n      <MovieListWeb />\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n  :(\n    <View style={styles.container}>\n      <MovieList />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    color: 'black',\n    textAlign: 'center',\n    marginTop: 200,\n    maxHeight: 300\n  },\n});\n"],"sourceRoot":""}